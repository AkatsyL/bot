import telebot
import config
from telebot import types
from cista import encode, decode
from io import BytesIO

bot = telebot.TeleBot(config.token)
sad = True
en_ = False
de_ = False
res = 0
images = dict()
wolk = 1
ric = 1


# start
@bot.message_handler(commands=['start'])
def start(massage):
#  —Ç–∏–º–æ
    sti = open('file/bot_timo.webp', 'rb')
    bot.send_sticker(massage.chat.id, sti)
#  –∫–ª–∞–≤–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å üèÅ')
    item2 = types.KeyboardButton('–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ üíª')
    markup.add(item1, item2)
#  –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    bot.send_message(massage.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name} ! üëã"
                                      "\n–Ø –±–æ—Ç —à–∏—Ñ—Ä–æ–≤—â–∏–∫ –ø–æ –∏–º–µ–Ω–∏ –ü–æ–Ω–∫–∏ üê∞"
                                      "\n–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! ‚ù§".format(massage.from_user, bot.get_me()),
                                       reply_markup=markup, parse_mode='html')


# help
@bot.message_handler(commands=['help'])
def help(massage):
# –≤—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏–π ü¶æ
    bot.send_message(massage.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–µ–ª–∞—Ç—å: –®–∏—Ñ—Ä—É–µ–º –∏–ª–∏ –î–µ—à–∏—Ñ—Ä—É–µ–º"
                                      "\n /encode - –®–∏—Ñ—Ä—É–µ–º üõ¨"
                                      "\n /decode - –î–µ—à–∏—Ñ—Ä—É–µ–º üõ´".format(massage.from_user, bot.get_me()))


# encode
@bot.message_handler(commands=['encode'])
def enc(massage):
    bot.send_message(massage.chat.id, "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –®–∏—Ñ—Ä–æ–≤–∫–∏: üõ¨"
                                      "\n 1 - –í–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å"
                                      "\n 2 - –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á, —Ç–æ–ª—å–∫–æ –±–ª–∞–≥–æ–¥–æ—Ä—è –µ–º—É —Ç—ã —Å–º–æ–∂–µ—à—å —Ä–∞–∑—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–∞–Ω–∏–µ"
                                      "\n 3 - –í—ã–≤–µ–¥–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–ø—Ä—è—Ç–∞—Ç—å –ø–æ—Å–ª–∞–Ω–∏–µ".format(massage.from_user, bot.get_me()))


# decode
@bot.message_handler(commands=['decode'])
def dec(massage):
    bot.send_message(massage.chat.id, "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –î–µ—à–∏—Ñ—Ä–æ–≤–∫–∏: üõ´"
                                      "\n 1 - –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á, –ø–æ–º–Ω–∏—Ç–µ —á—Ç–æ –±–µ–∑ –∫–ª—é—á–∞ –≤—ã –Ω–µ —Å–º–æ–∂–µ–Ω–µ —Ä–∞–∑—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–∞–Ω–∏–µ"
                                      "\n 2 - –í—ã–≤–µ–¥–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ—Ç–æ—Ä–æ–º —Å–ø—Ä—è—Ç–∞–Ω–Ω–æ –ø–æ—Å–ª–∞–Ω–∏–µ"
                                      " –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–∞–∫–æ–µ –∫–∞–∫–∏–º –≤—ã –µ–≥–æ –ø–æ–ª—É—á–∏–ª–∏ (–Ω–µ —Å–∂–∞—Ç—ã–º)".format(massage.from_user, bot.get_me()))


# –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞
@bot.message_handler(commands=['info'])
def info(massage):
    bot.send_message(massage.chat.id, "–°–≤–æ–¥–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ü–æ–Ω–∫–∏:"
                                      "\n 1 - —ç—Ç–æ –±–æ—Ç —à–∏—Ñ—Ä–æ–≤—â–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —à–∏—Ñ—Ä—É–µ—Ç –≤–∞—à–µ –ø–æ—Å–ª–∞–Ω–∏–µ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏"
                                      "\n 2 - –ø–æ–∫–∞ –¥—É–º–∞—é".format(massage.from_user, bot.get_me()))


# –Ω–∞—á–∞–ª–æ —à–∏—Ñ—Ä–æ–≤–∫–∏
@bot.message_handler(commands=['en'])
def en(massage):
    global sad
    global en_
    sad = False
    en_ = True
    bot.send_message(massage.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –ø–æ—Å–ª–∞–Ω–∏–µ:')


# –Ω–∞—á–∞–ª–æ –¥–µ—à–∏—Ñ—Ä–æ–≤–∫–∏
@bot.message_handler(commands=['de'])
def de(massage):
    global sad
    global de_
    sad = False
    de_ = True
    bot.send_message(massage.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á:')


@bot.message_handler(commands=['stop'])
def chek(massage):
    global de_
    global en_
    global ric
    global wolk
    global sad
    global res
    ric = 1
    wolk = 1
    sad = True
    en_ = False
    de_ = False
    if res == 1:
        res = 0
    else:
       bot.send_message(massage.chat.id, '–µ—Å–ª–∏ –Ω–µ –ø–æ–Ω—è–ª –Ω–∞–∂–º–∏ => /help')


# —Å–æ–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
@bot.message_handler(content_types=['text'])
def calabs(massage):
    global sad
    global en_
    global de_
    global text_to_encrypt
    global private_key
    if sad:
        if massage.chat.type == 'private':
            if massage.text == '–ù–∞—á–∞—Ç—å üèÅ':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton('/en - –®–∏—Ñ—Ä—É–µ–º üõ¨')
                item2 = types.KeyboardButton('/de - –î–µ—à–∏—Ñ—Ä—É–µ–º üõ´')
                markup.add(item1, item2)
                sti = open('file/fi.webp', 'rb')
                bot.send_sticker(massage.chat.id, sti)
                bot.send_message(massage.chat.id, '–ö–∞–∫–∏–µ –±—É–¥—É—Ç –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è ?'
                                                  '\n–∏—Ö –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–¥–µ—Å—å => /help', reply_markup=markup)

            elif massage.text == '–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ üíª':
                bot.send_message(massage.chat.id, '  /info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ'
                                                  '\n/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º '
                                                  '\n/help - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é ')
            else:
                bot.send_message(massage.chat.id, '–¢—ã –ø–æ –º–æ–µ–º—É —á—Ç–æ-—Ç–æ –ø–µ—Ä–µ–ø—É—Ç–∞–ª üëæ'
                                                  '\n–µ—Å–ª–∏ –Ω–µ –ø–æ–Ω—è–ª –Ω–∞–∂–º–∏ => /help')
    if en_:
        global wolk
        if massage.chat.type == 'private':
            if wolk == 1:
                text_to_encrypt = massage.text
                bot.send_message(massage.chat.id, '–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∫–ª—é—á:')
            elif wolk == 2:
                private_key = massage.text
                bot.send_message(massage.chat.id, '–í—Å—Ç–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:')
            elif wolk == 3:
                bot.send_message(massage.chat.id, '–≠—Ç–æ –Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!'
                                                  '\n–ü–æ—Ä—Ç–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:'
                                                  '\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å —à–∏—Ñ—Ä–æ–≤–∫—É –Ω–∞–ø–∏—à–∏—Ç–µ => /stop ')
                wolk -= 1

            wolk += 1
    if de_:
        global ric
        if massage.chat.type == 'private':
            if ric == 1:
                private_key = massage.text
                bot.send_message(massage.chat.id, '–í—Å—Ç–∞–ª—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:')
            elif ric == 2:
                bot.send_message(massage.chat.id, '–≠—Ç–æ –Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!'
                                                  '\n–ü–æ—Ä—Ç–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:'
                                                  '\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å –¥–µ—à–∏—Ñ—Ä–æ–≤–∫—É –Ω–∞–ø–∏—à–∏—Ç–µ /stop ')
                ric -= 1
        ric += 1


@bot.message_handler(content_types=['photo'])
def code(massage):
    global res
    if wolk == 3:
        sti = open('file/ok.webp', 'rb')
        bot.send_sticker(massage.chat.id, sti)
        bot.reply_to(massage, f'–°–æ–æ–±—â–µ–Ω–∏–µ : - {text_to_encrypt} - —É—Å–ø–µ—à–Ω–æ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ ')
        file_info = bot.get_file(massage.photo[len(massage.photo) - 1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = 'copy/' + file_info.file_path
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        with open(src, 'rb') as file:
            img_data = file.read()
        crypto_img = encode(text_to_encrypt, private_key, BytesIO(img_data))
        file_path = file_info.file_path
        file_name = '.'.join(file_path.split('/')[-1].split('.')[:-1]) + '.png'
        crypto_img.save(f'copy/crypto-{file_name}')
        name = file_name.split('/')[-1]
        bot.send_document(massage.chat.id, open(f'copy/crypto-{name}', 'rb'))
        res += 1
        bot.reply_to(massage, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è => /stop')
    else:
        sti = open('file/sory.webp', 'rb')
        bot.send_sticker(massage.chat.id, sti)
        bot.reply_to(massage, '–í—ã–¥–µ–ª–∞–µ—Ç–µ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫'
                              '\n –µ—Å–ª–∏ —á—Ç–æ –∂–º–∏ => /stop')


@bot.message_handler(content_types=['document'])
def code_(massage):
    global res
    if ric == 2:
        sticker_id = massage.document.file_id
        file_info = bot.get_file(sticker_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = 'photo/' + file_info.file_path
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        with open(src, 'rb') as file:
            img_data = file.read()
        sti = open('file/end.webp', 'rb')
        bot.send_sticker(massage.chat.id, sti)
        bot.reply_to(massage, f'–°–æ–æ–±—â–µ–Ω–∏–µ : - {decode(private_key, BytesIO(img_data))}'
                              f' - –±—ã–ª–æ —Å–ø—Ä—è—Ç–∞–Ω–Ω–æ –≤ —ç—Ç–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏')

        res += 1
        bot.reply_to(massage, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è => /stop')

    else:
        sti = open('file/sory.webp', 'rb')
        bot.send_sticker(massage.chat.id, sti)
        bot.reply_to(massage, '–í—ã–¥–µ–ª–∞–µ—Ç–µ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫'
                              '\n –µ—Å–ª–∏ —á—Ç–æ –∂–º–∏ => /stop')


if __name__ == '__main__': # —á—Ç–æ–±—ã –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–ª—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤ –≤–∏–¥–µ —Å—Ü–µ–Ω–∞—Ä–∏—è, –∞ –Ω–µ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
    try:
       bot.polling(none_stop=True) # –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    except Exception as e:
       print(e) # –∏–ª–∏ import traceback; traceback.print_exc() –¥–ª—è –ø–µ—á–∞—Ç–∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ—ã
